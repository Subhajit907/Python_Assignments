1. Please write a program using generator to print the numbers which can be divisible by 5 and 7 between 0 and n in comma separated form while n is input by console.
Ans:
def divisible_by_5_and_7(n):
    for num in range(n + 1):
        if num % 5 == 0 and num % 7 == 0:
            yield num

# Get input from console
n = int(input("Enter a number: "))

# Generate and print the divisible numbers
result = divisible_by_5_and_7(n)
print(','.join(str(num) for num in result))

   
2. Please write a program using generator to print the even numbers between 0 and n in comma separated form while n is input by console.
Ans:
def even_numbers(n):
    for num in range(n + 1):
        if num % 2 == 0:
            yield num

# Get input from console
n = int(input("Enter a number: "))

# Generate and print the even numbers
result = even_numbers(n)
print(','.join(str(num) for num in result))



3. Please write a program using list comprehension to print the Fibonacci Sequence in comma separated form with a given n input by console.
Ans:
# Get input from console
n = int(input("Enter the number of terms: "))

# Generate the Fibonacci sequence using list comprehension
fibonacci_sequence = [0, 1] + [fibonacci_sequence[i - 1] + fibonacci_sequence[i - 2] for i in range(2, n)]

# Print the Fibonacci sequence in comma-separated form
print(','.join(str(num) for num in fibonacci_sequence))


4. Assuming that we have some email addresses in the \"username@companyname.com\" format, please write program to print the user name of a given email address. Both user names and company names are composed of letters only.
Ans:
def extract_username(email):
    username = email.split('@')[0]
    return username

# Get input from console
email_address = input("Enter an email address: ")

# Extract the username
username = extract_username(email_address)

# Print the username
print("Username:", username)


5. Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default.
Ans:
class Shape:
    def __init__(self):
        self.area = 0

    def area(self):
        print("Area of the shape:", self.area)


class Square(Shape):
    def __init__(self, length):
        super().__init__()
        self.length = length

    def calculate_area(self):
        self.area = self.length * self.length


# Create an instance of Square
square = Square(5)

# Calculate and print the area of the square
square.calculate_area()
square.area()

  
   

